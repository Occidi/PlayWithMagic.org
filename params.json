{"name":"Play With Magic","tagline":"We're looking for a few good routines","body":"PlayWithMagic\r\n=============\r\n\r\nPlayWithMagic is a web-based application that catalogs magic tricks and helps magicians build shows.\r\n\r\n[Check out the prototype here](http://mark.nelson.engineer/PlayWithMagic/mockup/)\r\n\r\n![Home Page](https://github.com/PlayWithMagic/PlayWithMagic/blob/master/doc/images/README-Home.png \"Home Page\")\r\n             \r\nOverview\r\n--------\r\n_We're looking for a few good routines._\r\n\r\nIt's not difficult to learn a magic trick.  The hard part is choreographing a show from a diverse set of routines.\r\nOver their careers, magicians see countless acts, learn thousands of methods, slights, banter and gaffs\r\n(collectively called routines).  This web application allows magicians to catalog their routines.  Magicians\r\ncan cite where they learned it, who or what influenced it and how they personalized it.  Magicians\r\nhave the option to share their routines with others.  The benefit of cataloging routines is access the crowdsourced\r\npool of routines that feed a “Set Builder”.  The set builder filters routines and sequences them into a cohesive set.\r\nMagicians can identify routines for their set by searching the catalog and adding them into a shopping cart.  A routine\r\nrecommendation engine could prompt magicians to consider routines that are popular, utilize similar materials or take\r\nthem out of their comfort zone.\r\n\r\nApproach\r\n--------\r\nThe web application revolves around three entities:  Magicians, Routines and Sets.  A magician creates an account\r\nand enters profile information about themselves.  Magicians create routines, search others' routines, link\r\nroutines together and 'rate' routines.  Finally, magicians can compose sets.  Sets consist of:\r\n  * Information unique to the set (venue, expected duration, type, etc.).\r\n  * An interface for finding candidate routines:  A search/filter tool that allows magicians to find shared routines\r\n    in the application's catalog into a 'shopping cart'.  This tool will have a recommender engine to help magicians\r\n    find routines that they may not have picked on their own.\r\n  * A set-builder canvas that allows magicians to drag routines from a dock (the results of the picker) into a\r\n    visual representation of the set.  Routines can be reordered, moved back to the dock, etc.\r\n  * Indicators/status to help magicians understand certain rules such as:  Set duration, avoid repeating the same effect\r\n    throughout a set, cost of production, etc.\r\n\r\n![Routine Page](https://github.com/PlayWithMagic/PlayWithMagic/blob/master/doc/images/README-Routine.png \"Routine Page\")\r\n\r\n### Use Cases\r\n[Several use cases are documented in the Wiki.](https://github.com/PlayWithMagic/PlayWithMagic/wiki/Use-Cases)\r\n\r\n### User Experience\r\nThis web application has a dynamic, database-driven, responsive user interface.  It uses traditional metaphors such as \r\ntop navigation and familiar iconography.  Web-forms are used for input, tactile controls such as sliders and movable \r\nobjects may be used.  The set builder allows magicians to drag routines from a dock into a set.  Routines can be \r\nvisually rearranged and contain visual cues as to length or difficulty.\r\n\r\nThe application is fully usable from a desktop or tablet.  Mobile platform users can view sets, but not modify them.\r\n\r\nGenerally, using the application should be self-evident and obvious to use.  We aspire that the UI will be so good that\r\npeople can use it when they are sloppy drunk. (See the development section below for a more lucid explanation).  However\r\nwe will have some\r\n[user-level documentation in the project wiki](https://github.com/PlayWithMagic/PlayWithMagic/wiki/User-Guide).\r\n\r\n### Application Runtime Environment\r\nThe application runs through the [Play Framework](https://www.playframework.com).  The Play Framework provides\r\nboth a webserver and an application runtime framework.\r\n\r\nThe application draws on unmodified [JQuery](http://jqueryui.com), [Bootstrap](http://getbootstrap.com),\r\n[Bootswatch](https://bootswatch.com), [Font Awesome](http://fontawesome.io/icon/cog/) and\r\n[Google Font](http://www.google.com/fonts) tools directly from their CDN servers.\r\n\r\n### Application Deployment Environment\r\nThe application is deployed through the [Heroku Cloud Platform](https://www.heroku.com).\r\nInformation about the deployment, development and design of the application can be found at the [PlayWithMagic\r\nDeveloper's Wiki hosted on GitHub](https://github.com/PlayWithMagic/PlayWithMagic/wiki/Developer-Guide).\r\n\r\n### Application Development Environment\r\nThe application was developed with [IntelliJ](https://www.jetbrains.com/idea/) IDE and uses\r\n[SBT](http://www.scala-sbt.org) for the build engine.  Version control is maintained through\r\n[GitHub](https://github.com).\r\n\r\n### User Interface Philosophy\r\nWe'd like to build a user interface that even magicians can use.  Magicians are an odd bunch.  They categorically \r\nsuffer from attention deficit disorder (unless they are practicing).  They are not organized (except for loading \r\npacket tricks)... and they like to drink (a lot).  So, we have adopted a User Interface strategy called \r\n[The User is Drunk](https://www.youtube.com/watch?v=r2CbbBLVaPk).  There is an excellent 5 minute video to get you\r\nstarted.  The central ideas are:  Great UI isn't there (people don't realize it's there).  Give users lots of guidance\r\nand say things twice.  \r\n\r\n### Application High-Level Design\r\nThe model revolves around three central entities:\r\n  1. Routines (A single magic trick)\r\n  2. Sets (An personalized, ordered collection of routines)\r\n  3. Magicians/Users\r\n\r\nThe application uses a Model-View-Controller (MVC) design pattern.  The application is designed with rapid\r\nprototyping in mind and will consequently rely on unit, integration and application tests to maintain a high level\r\nof quality at each release.\r\n\r\nMilestones\r\n----------\r\n### Mockup\r\nDue:  25 March\r\n  + ~~A responsive, non-dynamic (no Java software) representation of the major elements of the application.~~\r\n  + ~~A README.md file~~\r\n  + ~~A viable GitHub project~~\r\n    - ~~Source code~~\r\n    - ~~Issue tracker~~\r\n    - ~~Wiki content~~\r\n\r\n### Deliverable 1\r\nDue:  8 April (2 weeks after Mockup)\r\n  + Established Look & Feel\r\n  + Consistent Navigation\r\n  + CRUD capable entities against an in-memory database w/ 2-3 users pre-populated)\r\n    - User Profile\r\n    - User Routines\r\n  + Seed the dataset with a minimum of 24 routines \r\n\r\n### Deliverable 2\r\nDue:  22 April (2 weeks after Deliverable 1)\r\n  + Refactor the model into a database-backed system\r\n  + Increase the number of saved users & routines\r\n  + Find & Save routines\r\n  + CRUD capable Set management\r\n  + Add an additional 12 routines -- have the consulting magicians use the UI to add routines\r\n\r\n### Deliverable 3\r\nDue:  6 May (2 weeks after Deliverable 2)\r\n  + Library mockup (not complete implementation)\r\n  + Recommender engine mockup\r\n  + Add an additional 12 routines\r\n\r\n### Final Project Due\r\nDue:  13 May (1 week after Deliverable 3)\r\n  + Update documentation, final fit-and-finish.\r\n\r\nBugs and Feature Requests\r\n-------------------------\r\nGot a bug or a feature request?  We'd like to hear it!  \r\n[Click here to open an issue.](https://github.com/PlayWithMagic/PlayWithMagic/issues/new \"New Issue\")\r\n\r\nKnown Bugs\r\n----------\r\n[An up-to-date list of issues can be found at the PlayWithMagic website.](https://github.com/PlayWithMagic/PlayWithMagic/issues)\r\n\r\nCreators\r\n--------\r\n * Patrick Karjala\r\n * David Neely\r\n * Mark Nelson\r\n\r\n[Checkout the Contact Us page on the PlayWithMagic Wiki](https://github.com/PlayWithMagic/PlayWithMagic/wiki/Contact-Us)\r\n\r\nCredits and Acknowledgements\r\n-----------------------------\r\nThe authors would like to thank the University of Hawaii, the UH Department Information and Computer Science and Dr. Philip Johnson for their support during the development of this project.\r\n\r\nConsulting Magicians\r\n--------------------\r\n * [Lee Asher](http://leeasher.com)\r\n * [Steve Johnson](http://grandillusions.com)\r\n * [Aaron Fisher](http://www.aaronfishermagic.com)\r\n * [Mark Nelson](http://mark.nelson.engineer/wordpress/index.php/magic-home-page/)\r\n\r\nThe Three Prime Directives\r\n--------------------------\r\n1. The system successfully accomplishes a useful task.\r\n  * An online catalog of your own routines\r\n  * Ability to find others' routines\r\n  * A tool for choreographing routines into saved sets\r\n  * A recommender engine for adding previously unknown routines into sets\r\n2. An external user can successfully install and use the system\r\n  * The application will be cloud based\r\n  * The only client-side software requirements is a browser\r\n  * The client-side hardware requirement for full functionality is a desktop or tablet\r\n3. An external developer can successfully understand and enhance the system\r\n  * Documentation can be found on the Wiki and will be enough to allow a competent developer to make enhancements\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}